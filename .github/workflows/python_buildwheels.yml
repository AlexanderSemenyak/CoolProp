name: Python cibuildwheel

on:
  push:
    branches: [ 'master', 'main', 'develop', 'actions_pypi' ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ 'master', 'main', 'develop' ]

jobs:
  python_bindings:
    strategy:
      # Ensure that a wheel builder finishes even if another fails
      fail-fast: false
      matrix:
        python-version: [36, 37, 38, 39, 310, 311]
        include:
          - os: ubuntu
            arch: x86_64
          - os: ubuntu
            arch: aarch64
          - os: ubuntu
            arch: ppc64le # s390x has no users at the moment and takes forever to build
          - os: windows
            arch: AMD64
          - os: windows
            arch: x86 # ARM64 creates problems with msgpack-c
          - os: macos
            arch: x86_64
          - os: macos
            arch: arm64 # universal2 is redundant
            
    uses: ./.github/workflows/python_cibuildwheel.yml
    with:
      os: ${{ matrix.os }}
      python-version: ${{ matrix.python-version }}
      arch: ${{ matrix.arch }}

  upload_python_bindings_to_pypi:
    needs: python_bindings
    name: Upload to PyPi
    runs-on: ubuntu-latest
    steps:

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9.x

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine requests packaging

        if [[ "$GITHUB_REF" == *"refs/tags"* ]]; then
          TWINE_REPOSITORY=pypi
          TWINE_PASSWORD=${{ secrets.PYPI_TOKEN }}
        else
          TWINE_REPOSITORY=testpypi
          TWINE_PASSWORD=${{ secrets.TESTPYPI_TOKEN }}
        fi;
        echo "Using TWINE_REPOSITORY=$TWINE_REPOSITORY"
        echo "TWINE_REPOSITORY=$TWINE_REPOSITORY" >> $GITHUB_ENV
        echo "TWINE_PASSWORD=$TWINE_PASSWORD" >> $GITHUB_ENV

    - name: Download ALL wheels
      uses: actions/download-artifact@v2
      with:
        name: Python
        path: Python

    - name: Display structure of downloaded files
      run: |
        set -x
        ls -R
        du -sh

    - name: Publish wheels to (Test)PyPI
      if: ${{ github.event_name != 'pull_request' }}
      env:
        TWINE_USERNAME: __token__
      run: |
        python -m twine upload --skip-existing Python/*.whl
